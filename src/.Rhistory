knitr::opts_chunk$set(fig.path = '../assets/images/')
knitr::render_jekyll()
library(lubridate)
library(tibble)
library(dplyr)
library(tidyr)
library(ggplot2)
library(forcats)
library(purrr)
set.seed(1234)
sales <- tibble(date = ymd(rep(c(20180101, 20180102, 20180103), 3)),
product = rep(c("A", "B", "C"), each = 3),
sales = sample(1:20, size = 9, replace = T))
sales
cor_matrix <-
sales %>%
spread(key = product, value = sales) %>%
select(-date) %>%
cor()
cor_matrix
cor_tidy <-
cor_matrix %>%
as.data.frame() %>%
rownames_to_column(var = "product1") %>%
gather(key = product2, value = corr, -product1)
cor_tidy
ggplot(cor_tidy, aes(x = product1, y = product2, fill = corr)) + geom_tile() + scale_fill_gradient2(limits = c(-1, 1))
cor_tidy %>%
filter(product1 != product2) %>%
distinct(products = paste(pmin(product1, product2),
pmax(product1, product2), sep = "_vs_"), .keep_all = TRUE) %>%
ggplot(aes(x = fct_reorder(products, corr), y = corr, fill = corr > 0.7)) +
geom_col(width = 0.7) +
coord_flip() +
ylim(-1, 1) +
xlab("products") +
theme(aspect.ratio = 1/3) +
scale_fill_discrete(name = "Cor > 0.7",
breaks = c(TRUE, FALSE),
labels = c("Yes", "No"))
values <- c("A", "B", "C")
df <- expand.grid(ID1 = values, ID2 = values, ID3 = values, stringsAsFactors = FALSE)
df
distinct(df, ID = pmap_chr(select(df, starts_with("ID")),
~paste0(sort(c(...)), collapse="_")))
df
sales
install.packages("corrr")
install.packages("corrr")
library("devtools", lib.loc="~/R/win-library/3.5")
devtools::install_github("drsimonj/corrr")
devtools::install_github("drsimonj/corrr")
knitr::opts_chunk$set(fig.path = '../assets/images/')
knitr::render_jekyll()
knitr::opts_chunk$set(fig.path = '../assets/images/')
knitr::render_jekyll()
library(corrr)
sales %>%
select(-date) %>%
correlate()
library(dplyr)
sales %>%
select(-date) %>%
correlate()
?correlate
library(dplyr)
sales %>%
spread(key = product, value = sales) %>%
select(-date) %>%
correlate()
library(dplyr)
library(tidyr)
sales %>%
spread(key = product, value = sales) %>%
select(-date) %>%
correlate()
?focus
library(dplyr)
library(tidyr)
sales %>%
spread(key = product, value = sales) %>%
select(-date) %>%
correlate() %>%
stretch()
library(dplyr)
library(tidyr)
sales %>%
spread(key = product, value = sales) %>%
select(-date) %>%
correlate() %>%
stretch()
library(dplyr)
library(tidyr)
sales %>%
spread(key = product, value = sales) %>%
select(-date) %>%
correlate() %>%
shave() %>%
stretch()
library(dplyr)
library(tidyr)
sales %>%
spread(key = product, value = sales) %>%
select(-date) %>%
correlate() %>%
shave() %>%
stretch() %>%
drop_na()
shave
library(dplyr)
library(tidyr)
sales %>%
spread(key = product, value = sales) %>%
select(-date) %>%
correlate() %>%
shave() %>%
stretch() %>%
rplot()
library(dplyr)
library(tidyr)
sales %>%
spread(key = product, value = sales) %>%
select(-date) %>%
correlate() %>%
shave() %>%
#stretch() %>%
rplot()
library(dplyr)
library(tidyr)
sales %>%
spread(key = product, value = sales) %>%
select(-date) %>%
correlate() %>%
shave() %>%
stretch() %>%
drop_na()
library(dplyr)
library(tidyr)
sales %>%
spread(key = product, value = sales) %>%
select(-date) %>%
correlate() %>%
shave() %>%
stretch(na.rm = TRUE)
knitr::render_jekyll()
knitr::opts_chunk$set(fig.path = '../assets/images/')
knitr::render_jekyll()
setwd("C:/Users/alberto/Dropbox/albertotb.github.io/src")
knitr::knit("2019-01-25-Test.Rmd")
knitr::knit("2019-01-28-Tidyr-example.Rmd")
knitr::opts_chunk$set(fig.path = '../assets/images/')
knitr::render_jekyll()
library(lubridate)
library(tibble)
library(dplyr)
library(tidyr)
library(ggplot2)
library(forcats)
library(purrr)
set.seed(1234)
sales <- tibble(date = ymd(rep(c(20180101, 20180102, 20180103), 3)),
product = rep(c("A", "B", "C"), each = 3),
sales = sample(1:20, size = 9, replace = T))
sales
cor_matrix <-
sales %>%
spread(key = product, value = sales) %>%
select(-date) %>%
cor()
cor_matrix
cor_tidy <-
cor_matrix %>%
as.data.frame() %>%
rownames_to_column(var = "product1") %>%
gather(key = product2, value = corr, -product1)
cor_tidy
ggplot(cor_tidy, aes(x = product1, y = product2, fill = corr)) +
geom_tile() +
scale_fill_gradient2(limits = c(-1, 1))
cor_tidy %>%
filter(product1 != product2) %>%
distinct(products = paste(pmin(product1, product2),
pmax(product1, product2), sep = "_vs_"), .keep_all = TRUE) %>%
ggplot(aes(x = fct_reorder(products, corr), y = corr, fill = corr > 0.7)) +
geom_col(width = 0.7) +
coord_flip() +
ylim(-1, 1) +
xlab("products") +
theme(aspect.ratio = 1/3) +
scale_fill_discrete(name = "Cor > 0.7",
breaks = c(TRUE, FALSE),
labels = c("Yes", "No"))
values <- c("A", "B", "C")
df <- expand.grid(ID1 = values, ID2 = values, ID3 = values, stringsAsFactors = FALSE)
df
distinct(df, ID = pmap_chr(select(df, starts_with("ID")),
~paste0(sort(c(...)), collapse="_")))
cor_tidy %>%
filter(product1 != product2) %>%
distinct(products = paste(pmin(product1, product2),
pmax(product1, product2), sep = "_vs_"), .keep_all = TRUE) %>%
ggplot(aes(x = fct_reorder(products, corr), y = corr, fill = corr > 0.7)) +
geom_col(width = 0.7) +
coord_flip() +
ylim(-1, 1) +
xlab("products") +
theme(aspect.ratio = 1/3) +
scale_fill_discrete(name = "Cor > 0.7",
breaks = c(TRUE, FALSE),
labels = c("Yes", "No"))
cor_tidy %>%
filter(product1 != product2) %>%
distinct(products = paste(pmin(product1, product2),
pmax(product1, product2), sep = "_vs_"), .keep_all = TRUE) %>%
ggplot(aes(x = fct_reorder(products, corr), y = corr, fill = corr > 0.7)) +
geom_col(width = 0.7) +
coord_flip() +
ylim(-1, 1) +
xlab("products") +
theme(aspect.ratio = 1/3) +
scale_fill_discrete(name = "Cor > 0.7",
breaks = c(TRUE, FALSE),
labels = c("Yes", "No"))
knitr::knit('2019-01-28-Compute-correlations-using-the-tidyverse.Rmd')
knitr::knit('2019-01-28-Compute-correlations-using-the-tidyverse.Rmd')
knitr::knit('2019-01-28-Compute-correlations-using-the-tidyverse.Rmd')
knitr::knit('2019-01-28-Compute-correlations-using-the-tidyverse.Rmd')
knitr::opts_chunk$set(fig.path = '../assets/images/')
knitr::render_jekyll()
set.seed(1234)
n <- 1000000
d <- 6
m <- matrix(sample(c(0, 1), size = n*d, replace = TRUE), n, d,
dimnames = list(str_pad(1:n, str_length(n), pad = "0"),
c("A", "B", "C", "D", "E", "F")))
library(tidyr)
library(dplyr)
library(tibble)
library(stringr)
library(purrr)
library(readr)
library(microbenchmark)
set.seed(1234)
n <- 1000000
d <- 6
m <- matrix(sample(c(0, 1), size = n*d, replace = TRUE), n, d,
dimnames = list(str_pad(1:n, str_length(n), pad = "0"),
c("A", "B", "C", "D", "E", "F")))
df <- as_tibble(m, rownames = 'index')
library(tidyr)
library(dplyr)
library(tibble)
library(stringr)
library(purrr)
library(readr)
library(microbenchmark)
set.seed(1234)
n <- 1000000
d <- 6
m <- matrix(sample(c(0, 1), size = n*d, replace = TRUE), n, d,
dimnames = list(str_pad(1:n, str_length(n), pad = "0"),
c("A", "B", "C", "D", "E", "F")))
df <- as_tibble(m, rownames = 'index')
library(tidyr)
library(dplyr)
library(tibble)
library(stringr)
library(purrr)
library(readr)
library(microbenchmark)
set.seed(1234)
n <- 1000000
d <- 6
m <- matrix(sample(c(0, 1), size = n*d, replace = TRUE), n, d,
dimnames = list(str_pad(1:n, str_length(n), pad = "0"),
c("A", "B", "C", "D", "E", "F")))
df <- as_tibble(m, rownames = 'index')
df
library(tidyr)
library(dplyr)
library(tibble)
library(stringr)
library(purrr)
library(readr)
library(microbenchmark)
set.seed(1234)
n <- 1000000
d <- 6
m <- matrix(sample(c(0, 1), size = n*d, replace = TRUE), n, d,
dimnames = list(str_pad(1:n, str_length(n), pad = "0"),
c("A", "B", "C", "D", "E", "F")))
df <- as_tibble(m, rownames = 'index')
head(df)
mutate(df, total = A + B + C + D + E + F)
mutate(df, total = rowSums(select(., -index)
mutate(df, total = rowSums(select(., -index))
mutate(df, total = rowSums(select(., -index)))
mutate(df, total = rowSums(select(df, -index)))
?rowSums
?matrix
mutate(df, total = reduce(select(df, -index), `+`))
knitr::opts_knit
knitr::opts_knit()
?opts_knit
vignette('knit_print', package = 'knitr')
?knitr::knit_print
cor_tidy %>%
filter(product1 != product2) %>%
distinct(products = paste(pmin(product1, product2),
pmax(product1, product2), sep = "_vs_"), .keep_all = TRUE) %>%
ggplot(aes(x = fct_reorder(products, corr), y = corr, fill = corr > 0.7)) +
geom_col(width = 0.7) +
coord_flip() +
ylim(-1, 1) +
xlab("products") +
theme(aspect.ratio = 1/3) +
scale_fill_discrete(name = "Cor > 0.7",
breaks = c(TRUE, FALSE),
labels = c("Yes", "No"))
knitr::opts_knit$set(collapse = TRUE, )
knitr::knit("Benchmark-adding-together-multiple-columns-in-dplyr.Rmd")
knitr::opts_knit$set(collapse = TRUE)
knitr::opts_chunk$set(fig.path = '../assets/images/')
knitr::render_jekyll()
bm
bm
?microbenchmark
print(bm)
print(bm)
print(bm, order = 'mean', signif = 3)
print(bm, order = 'median', signif = 3)
?microbenchmark
library(ggplot2)
autoplot.microbenchmark(bm)
library(ggplot2)
autoplot(bm)
library(ggplot2)
autoplot(bm)
?autoplot
library(ggplot2)
plot(bm)
library(ggplot2)
autoplot(bm)
autoplot
bm
arrange(bm, desc(time))
library(ggplot2)
autoplot(arrange(bm, desc(time)))
library(ggplot2)
autoplot(bm)
autoplot.microbenchmark
getS3method("autoplot", "microbenchmark")
?scale_x_discrete
?discrete_scale
knitr::knit("Benchmark-adding-together-multiple-columns-in-dplyr.Rmd")
source('C:/Users/alberto/Desktop/test_autoplot.R')
autoplot(bm)
?convert_to_unit
library(microbenchmark)
autoplot(bm)
convert_to_unit <- convert_to_unit
source('C:/Users/alberto/Desktop/microbenchmark/R/internal.R')
source('C:/Users/alberto/Desktop/test_autoplot.R')
autoplot(bm)
autoplot(bm)
attributes(bm)
?getS3method
getS3method("print", "microbenchmark")
summary(bm, unit = unit)
summary(bm)
getS3method("summary", "microbenchmark")
source('C:/Users/alberto/Desktop/test_autoplot.R')
autoplot(bm)
getS3method("print", "microbenchmark")
?reorder
debugSource('C:/Users/alberto/Desktop/test_autoplot.R')
autoplot(bm, order='mean')
autoplot(bm, order='mean')
object$expr
x[[order]]
order(x[[order]])
levels(object$expr)[order(x[[order]])]
levels(object$expr)[order(x[[order]])]
levels(objects$expr) <- levels(object$expr)[order(x[[order]])]
objects$expr <- factor(objects$expr, levels = levels(object$expr)[order(x[[order]])])
objects$expr
debugSource('C:/Users/alberto/Desktop/test_autoplot.R')
autoplot(bm, order='mean')
factor(objects$expr, levels = levels(object$expr)[order(x[[order]])])
factor(objects$expr, levels = levels(object$expr)[order(x[[order]])])
autoplot(bm, order='mean')
objects$expr <- factor(objects$expr, levels = levels(object$expr)[order(x[[order]])])
debugSource('C:/Users/alberto/Desktop/test_autoplot.R')
levels(object$expr)[order(x[[order]])]
autoplot(bm, order='mean')
levels(object$expr)[order(x[[order]])]
a <- factor(objects$expr, levels = levels(object$expr)[order(x[[order]])]
)
a <- objects$expr
autoplot(bm, order='mean')
a <- objects$expr
debugSource('C:/Users/alberto/Desktop/test_autoplot.R')
autoplot(bm, order='mean')
debugSource('C:/Users/alberto/Desktop/test_autoplot.R')
autoplot(bm, order='mean')
library(microbenchmark)
autoplot(bm, order='mean')
source('C:/Users/alberto/Desktop/test_autoplot.R')
autoplot(bm, order='mean')
library(ggplot2)
autoplot(bm, order='mean')
autoplot(bm, order='mean')
levels(object$expr)[order(x[[order]])]
objects$expr
factor(object$expr, levels = levels(object$expr)[order(x[[order]])])
object$expr <- factor(object$expr, levels = levels(object$expr)[order(x[[order]])])
source('C:/Users/alberto/Desktop/test_autoplot.R')
autoplot(bm, order='mean')
source('C:/Users/alberto/Desktop/test_autoplot.R')
autoplot(bm, order='mean')
autoplot(bm)
autoplot(bm, order='mean')
source('C:/Users/alberto/Desktop/test_autoplot.R')
autoplot(bm, order='mean')
autoplot(bm)
